---
# Поиск маркера последнего запуска роли
- name: Find recent run marker
  find:
    paths: /tmp
    pattern: '{{ role_name }}.{{ docker.cache_key }}.run-marker'
    age: -1h
  register: run_marker

# Выполнение блока задач только если роль не запускалась в последний час или если кэширование отключено
- become: yes
  when: run_marker.files | length == 0 or not docker.enable_cache
  block:
    # Включение подзадач из setup.yml
    - include_tasks: setup.yml

    # Установка версии пакета Docker по умолчанию, если она не указана
    - name: Set default value for docker.package_version if not specified
      set_fact:
        docker:
          package_version: "{{ docker.package_version_os_defaults[ansible_distribution + ansible_distribution_version] }}"
      when: docker.package_version is none

    # Резервное копирование текущей конфигурации Docker
    - name: Backup current Docker config
      copy:
        src: /etc/docker/daemon.json
        dest: /etc/docker/daemon.json.backup
        remote_src: yes
        mode: '0644' # Установка безопасных разрешений
      when: "'docker' in ansible_facts.services"

    # Блок задач для установки Docker
    - vars:
        package: "docker-{{ docker.edition }}{{ (docker.package_version == '') | ternary('', '=' + docker.package_version) }}"
      become: yes
      block:
        # Установка Docker
        - name: Install Docker
          package:
            name: "{{ package }}"
            state: "{{ docker.package_state }}"
          notify: Restart docker
          failed_when: false # Использовать конкретные условия для failed_when, если нужно

    # Убедиться, что каталог /etc/docker существует
    - name: Ensure /etc/docker/ directory exists
      file:
        path: /etc/docker
        state: directory
        mode: '0755'

    # Конфигурация опций демона Docker
    - name: Configure Docker daemon options
      copy:
        content: "{{ daemon_options | to_nice_json }}"
        dest: /etc/docker/daemon.json
        mode: '0644'
      notify: Restart docker

    # Принудительное выполнение обработчиков
    - name: Ensure handlers are notified now to avoid firewall conflicts
      meta: flush_handlers

    # Проверка работоспособности сервиса Docker
    - name: Verify Docker service is running
      systemd:
        name: docker
        state: started
      register: docker_service
      changed_when: false
      failed_when: docker_service.status != "active"

    # Откат конфигурации Docker, если сервис не работает
    - name: Restore Docker config from backup and restart if Docker is not running
      block:
        - name: Restore Docker config from backup
          copy:
            src: /etc/docker/daemon.json.backup
            dest: /etc/docker/daemon.json
            remote_src: yes
            mode: '0644'
          notify: Restart docker
        - name: Fail the role if config is invalid
          fail:
            msg: "The Docker configuration is invalid. The backup configuration has been restored."
      when: docker_service is failed

    # Создание маркера последнего успешного запуска
    - name: Create run marker
      file:
        path: /tmp/{{ role_name }}.{{ docker.cache_key }}.run-marker
        state: touch
        mode: '0644'
